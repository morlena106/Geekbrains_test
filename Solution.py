# Задача №1. Написать программу для копирования массива.

# Решение 1. Варианты неглубокой копии списка

a = [1,2,3,4,5,6,'qwerty']

# Вариант 1. "В лоб"
b = []
for i in a:
    b.append(i)
    
# Вариант 2. Встроенные методы списков
b = a.copy()

# Вариант 3. Решение через срезы 
b = a[:]

# Для данных решений достаточно проверки

if a == b and id(a) != id(b):
    print('Задача выполнена. Массив скопирован')
else:
    print('Программа работает некорректно')
    
# Решение 2. Вариант глубокой копии списка для продвинутых

def deep_copy(lst): 
    if type(lst)==list:
        extra_list = []
        for element in lst:
            extra_list.append(deep_copy(element))
        return extra_list
    else:
        return lst
    
def list_copy(lst):
    new_list = []
    for elem in lst:
        new_list.append(deep_copy(elem))
    return new_list

a = [1,2,3,4,[5,6,[7,8]],'qwerty']
b = list_copy(a)

# Проверим, что изменения в скопированным списке не отображаются в изначальном и метод работает верно

b[4].append(7)
if a != b:
    print('Задача выполнена. Массив скопирован')
else:
    print('Программа работает некорректно')
    
# Задача №2.  Написать программу для операции "произведение массивов". Сама операция определяется так, как будто элементы массива - это коэффициенты полинома. Соответственно, произведение массивов - должно дать новый массив, коэффициенты которого соответсвуют нужному полиному.
# Например, возьмем полином (x - 1) и полином (x + 2). Их можно представить в виде массивов [-1, 1] и [2, 1] соответственно. Индекс элемента в массиве соответствует степени x при этом коээфициенте, т.е. полином (x - 1) можно переписать как (-1 * x^0 + 1 * x^1), таким образом соответсвующий этому полиному массив будет иметь вид [-1, 1].
# По указанному правилу произведение массивов [-1, 1] и [2, 1] должно быть равно [-2, 1, 1], т.к. (x - 1) * (x + 2) = (x^2 + x^1 - 2).

# Решение

def polinom(p1,p2):
    polim = [0]*(len(p1)+len(p2)-1)
    for index_1,koef_1 in enumerate(p1):
        for index_2,koef_2 in enumerate(p2):
            polim[index_1+index_2] += koef_1*koef_2
    return polim

# Тестируем

assert polinom([4,-6],[20, 0, 3]) == [80, -120, 12, -18], 'Тест провален'
assert polinom([-1,1],[2,1]) == [-2, 1, 1], 'Тест провален'
assert polinom([-5,2,8],[5,0,3]) == [-25, 10, 25, 6, 24], 'Тест провален'
